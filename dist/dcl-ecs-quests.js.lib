[
  {
    "path": "node_modules/dcl-quests-client/quests-client-amd.js",
    "content": "\"use strict\";\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __assign = (this && this.__assign) || function () {\r\n    __assign = Object.assign || function(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\r\n                t[p] = s[p];\r\n        }\r\n        return t;\r\n    };\r\n    return __assign.apply(this, arguments);\r\n};\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nvar __generator = (this && this.__generator) || function (thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n};\r\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}));\r\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\r\n};\r\ndefine(\"dcl-quests-client/quests-client-amd\", (function () {\r\n    \"use strict\";\r\n    var t = \"undefined\" != typeof globalThis ? globalThis : \"undefined\" != typeof window ? window : \"undefined\" != typeof global ? global : \"undefined\" != typeof self ? self : {};\r\n    function e(t) { return t && t.__esModule && Object.prototype.hasOwnProperty.call(t, \"default\") ? t.default : t; }\r\n    function n(t) { var e = { exports: {} }; return t(e, e.exports), e.exports; }\r\n    var r = n((function (t, e) { Object.defineProperty(e, \"__esModule\", { value: !0 }), e.fromBase64 = e.toBase64 = void 0; var n = \"function\" == typeof btoa ? btoa : function (t) { return Buffer.from(t).toString(\"base64\"); }, r = \"function\" == typeof atob ? atob : function (t) { return Buffer.from(t, \"base64\").toString(\"utf-8\"); }; e.toBase64 = function (t) { return n(t); }, e.fromBase64 = function (t) { return r(t); }; })), o = n((function (t, e) { function n(t) { return t.split(\"\").reverse().join(\"\"); } Object.defineProperty(e, \"__esModule\", { value: !0 }), e.DefObf = void 0, e.DefObf = new (function () { function t() { } return t.prototype.obf = function (t) { return n(r.toBase64(t)).replace(/=/g, \"_\"); }, t.prototype.deobf = function (t) { return r.fromBase64(n(t.replace(/_/g, \"=\"))); }, t; }()); })), i = n((function (t, e) { Object.defineProperty(e, \"__esModule\", { value: !0 }), e.AUTH_METADATA_HEADER = e.AUTH_TIMESTAMP_HEADER = e.AUTH_CHAIN_HEADER_PREFIX = void 0, e.AUTH_CHAIN_HEADER_PREFIX = \"x-identity-auth-chain-\", e.AUTH_TIMESTAMP_HEADER = \"x-identity-timestamp\", e.AUTH_METADATA_HEADER = \"x-identity-metadata\"; })), u = n((function (t, e) { var n, r; Object.defineProperty(e, \"__esModule\", { value: !0 }), e.Visibility = e.ProgressStatus = void 0, (n = e.ProgressStatus || (e.ProgressStatus = {})).BLOCKED = \"blocked\", n.NOT_STARTED = \"not_started\", n.ON_GOING = \"on_going\", n.COMPLETED = \"completed\", n.FAILED = \"failed\", (r = e.Visibility || (e.Visibility = {})).VISIBLE = \"visible\", r.VISIBLE_IF_CAN_START = \"visible_if_can_start\", r.SECRET = \"secret\"; })), a = n((function (e, n) { var r = t && t.__createBinding || (Object.create ? function (t, e, n, r) { void 0 === r && (r = n), Object.defineProperty(t, r, { enumerable: !0, get: function () { return e[n]; } }); } : function (t, e, n, r) { void 0 === r && (r = n), t[r] = e[n]; }), a = t && t.__exportStar || function (t, e) { for (var n in t)\r\n        \"default\" === n || Object.prototype.hasOwnProperty.call(e, n) || r(e, t, n); }; Object.defineProperty(n, \"__esModule\", { value: !0 }), a(o, n), a(i, n), a(u, n); })), c = n((function (e, n) { var r = t && t.__awaiter || function (t, e, n, r) { return new (n || (n = Promise))((function (o, i) { function u(t) { try {\r\n        c(r.next(t));\r\n    }\r\n    catch (t) {\r\n        i(t);\r\n    } } function a(t) { try {\r\n        c(r.throw(t));\r\n    }\r\n    catch (t) {\r\n        i(t);\r\n    } } function c(t) { var e; t.done ? o(t.value) : (e = t.value, e instanceof n ? e : new n((function (t) { t(e); }))).then(u, a); } c((r = r.apply(t, e || [])).next()); })); }, o = t && t.__generator || function (t, e) { var n, r, o, i, u = { label: 0, sent: function () { if (1 & o[0])\r\n            throw o[1]; return o[1]; }, trys: [], ops: [] }; return i = { next: a(0), throw: a(1), return: a(2) }, \"function\" == typeof Symbol && (i[Symbol.iterator] = function () { return this; }), i; function a(i) { return function (a) { return function (i) { if (n)\r\n        throw new TypeError(\"Generator is already executing.\"); for (; u;)\r\n        try {\r\n            if (n = 1, r && (o = 2 & i[0] ? r.return : i[0] ? r.throw || ((o = r.return) && o.call(r), 0) : r.next) && !(o = o.call(r, i[1])).done)\r\n                return o;\r\n            switch (r = 0, o && (i = [2 & i[0], o.value]), i[0]) {\r\n                case 0:\r\n                case 1:\r\n                    o = i;\r\n                    break;\r\n                case 4: return u.label++, { value: i[1], done: !1 };\r\n                case 5:\r\n                    u.label++, r = i[1], i = [0];\r\n                    continue;\r\n                case 7:\r\n                    i = u.ops.pop(), u.trys.pop();\r\n                    continue;\r\n                default:\r\n                    if (!(o = u.trys, (o = o.length > 0 && o[o.length - 1]) || 6 !== i[0] && 2 !== i[0])) {\r\n                        u = 0;\r\n                        continue;\r\n                    }\r\n                    if (3 === i[0] && (!o || i[1] > o[0] && i[1] < o[3])) {\r\n                        u.label = i[1];\r\n                        break;\r\n                    }\r\n                    if (6 === i[0] && u.label < o[1]) {\r\n                        u.label = o[1], o = i;\r\n                        break;\r\n                    }\r\n                    if (o && u.label < o[2]) {\r\n                        u.label = o[2], u.ops.push(i);\r\n                        break;\r\n                    }\r\n                    o[2] && u.ops.pop(), u.trys.pop();\r\n                    continue;\r\n            }\r\n            i = e.call(t, u);\r\n        }\r\n        catch (t) {\r\n            i = [6, t], r = 0;\r\n        }\r\n        finally {\r\n            n = o = 0;\r\n        } if (5 & i[0])\r\n        throw i[1]; return { value: i[0] ? i[1] : void 0, done: !0 }; }([i, a]); }; } }; Object.defineProperty(n, \"__esModule\", { value: !0 }), n.flatFetch = void 0, n.flatFetch = function (t, e) { return r(this, void 0, void 0, (function () { var n, r, i, u, a, c; return o(this, (function (o) { switch (o.label) {\r\n        case 0: return [4, fetch(t, e)];\r\n        case 1:\r\n            switch (n = o.sent(), r = (null == e ? void 0 : e.responseBodyType) || \"text\", i = {}, n.headers.forEach((function (t, e) { return i[e] = t; })), u = { ok: n.ok, status: n.status, statusText: n.statusText, headers: i }, r) {\r\n                case \"json\": return [3, 2];\r\n                case \"text\": return [3, 4];\r\n            }\r\n            return [3, 6];\r\n        case 2: return a = u, [4, n.json()];\r\n        case 3: return a.json = o.sent(), [3, 6];\r\n        case 4: return c = u, [4, n.text()];\r\n        case 5: return c.text = o.sent(), [3, 6];\r\n        case 6: return [2, u];\r\n    } })); })); }; })), s = n((function (e, n) { var r = t && t.__assign || function () { return (r = Object.assign || function (t) { for (var e, n = 1, r = arguments.length; n < r; n++)\r\n        for (var o in e = arguments[n])\r\n            Object.prototype.hasOwnProperty.call(e, o) && (t[o] = e[o]); return t; }).apply(this, arguments); }, o = t && t.__awaiter || function (t, e, n, r) { return new (n || (n = Promise))((function (o, i) { function u(t) { try {\r\n        c(r.next(t));\r\n    }\r\n    catch (t) {\r\n        i(t);\r\n    } } function a(t) { try {\r\n        c(r.throw(t));\r\n    }\r\n    catch (t) {\r\n        i(t);\r\n    } } function c(t) { var e; t.done ? o(t.value) : (e = t.value, e instanceof n ? e : new n((function (t) { t(e); }))).then(u, a); } c((r = r.apply(t, e || [])).next()); })); }, i = t && t.__generator || function (t, e) { var n, r, o, i, u = { label: 0, sent: function () { if (1 & o[0])\r\n            throw o[1]; return o[1]; }, trys: [], ops: [] }; return i = { next: a(0), throw: a(1), return: a(2) }, \"function\" == typeof Symbol && (i[Symbol.iterator] = function () { return this; }), i; function a(i) { return function (a) { return function (i) { if (n)\r\n        throw new TypeError(\"Generator is already executing.\"); for (; u;)\r\n        try {\r\n            if (n = 1, r && (o = 2 & i[0] ? r.return : i[0] ? r.throw || ((o = r.return) && o.call(r), 0) : r.next) && !(o = o.call(r, i[1])).done)\r\n                return o;\r\n            switch (r = 0, o && (i = [2 & i[0], o.value]), i[0]) {\r\n                case 0:\r\n                case 1:\r\n                    o = i;\r\n                    break;\r\n                case 4: return u.label++, { value: i[1], done: !1 };\r\n                case 5:\r\n                    u.label++, r = i[1], i = [0];\r\n                    continue;\r\n                case 7:\r\n                    i = u.ops.pop(), u.trys.pop();\r\n                    continue;\r\n                default:\r\n                    if (!(o = u.trys, (o = o.length > 0 && o[o.length - 1]) || 6 !== i[0] && 2 !== i[0])) {\r\n                        u = 0;\r\n                        continue;\r\n                    }\r\n                    if (3 === i[0] && (!o || i[1] > o[0] && i[1] < o[3])) {\r\n                        u.label = i[1];\r\n                        break;\r\n                    }\r\n                    if (6 === i[0] && u.label < o[1]) {\r\n                        u.label = o[1], o = i;\r\n                        break;\r\n                    }\r\n                    if (o && u.label < o[2]) {\r\n                        u.label = o[2], u.ops.push(i);\r\n                        break;\r\n                    }\r\n                    o[2] && u.ops.pop(), u.trys.pop();\r\n                    continue;\r\n            }\r\n            i = e.call(t, u);\r\n        }\r\n        catch (t) {\r\n            i = [6, t], r = 0;\r\n        }\r\n        finally {\r\n            n = o = 0;\r\n        } if (5 & i[0])\r\n        throw i[1]; return { value: i[0] ? i[1] : void 0, done: !0 }; }([i, a]); }; } }; function u(t, e, n, r) { var o = {}, i = Date.now(), u = JSON.stringify(n); return r([t.toLowerCase(), e.toLowerCase(), i.toString(), u].join(\":\").toLowerCase()).forEach((function (t, e) { o[\"\" + a.AUTH_CHAIN_HEADER_PREFIX + e] = JSON.stringify(t); })), o[a.AUTH_TIMESTAMP_HEADER] = i.toString(), o[a.AUTH_METADATA_HEADER] = u, o; } Object.defineProperty(n, \"__esModule\", { value: !0 }), n.authFetch = void 0, n.authFetch = function (t) { return function (e, n) { var a, s; return o(this, void 0, void 0, (function () { var o, f; return i(this, (function (i) { return o = new URL(e).pathname, f = r(r({}, n), { headers: r(r({}, u(null !== (a = null == n ? void 0 : n.method) && void 0 !== a ? a : \"get\", o, null !== (s = null == n ? void 0 : n.metadata) && void 0 !== s ? s : {}, t)), null == n ? void 0 : n.headers), responseBodyType: \"text\" }), [2, c.flatFetch(e, f)]; })); })); }; }; })), f = n((function (e, n) { var r = t && t.__assign || function () { return (r = Object.assign || function (t) { for (var e, n = 1, r = arguments.length; n < r; n++)\r\n        for (var o in e = arguments[n])\r\n            Object.prototype.hasOwnProperty.call(e, o) && (t[o] = e[o]); return t; }).apply(this, arguments); }, o = t && t.__awaiter || function (t, e, n, r) { return new (n || (n = Promise))((function (o, i) { function u(t) { try {\r\n        c(r.next(t));\r\n    }\r\n    catch (t) {\r\n        i(t);\r\n    } } function a(t) { try {\r\n        c(r.throw(t));\r\n    }\r\n    catch (t) {\r\n        i(t);\r\n    } } function c(t) { var e; t.done ? o(t.value) : (e = t.value, e instanceof n ? e : new n((function (t) { t(e); }))).then(u, a); } c((r = r.apply(t, e || [])).next()); })); }, i = t && t.__generator || function (t, e) { var n, r, o, i, u = { label: 0, sent: function () { if (1 & o[0])\r\n            throw o[1]; return o[1]; }, trys: [], ops: [] }; return i = { next: a(0), throw: a(1), return: a(2) }, \"function\" == typeof Symbol && (i[Symbol.iterator] = function () { return this; }), i; function a(i) { return function (a) { return function (i) { if (n)\r\n        throw new TypeError(\"Generator is already executing.\"); for (; u;)\r\n        try {\r\n            if (n = 1, r && (o = 2 & i[0] ? r.return : i[0] ? r.throw || ((o = r.return) && o.call(r), 0) : r.next) && !(o = o.call(r, i[1])).done)\r\n                return o;\r\n            switch (r = 0, o && (i = [2 & i[0], o.value]), i[0]) {\r\n                case 0:\r\n                case 1:\r\n                    o = i;\r\n                    break;\r\n                case 4: return u.label++, { value: i[1], done: !1 };\r\n                case 5:\r\n                    u.label++, r = i[1], i = [0];\r\n                    continue;\r\n                case 7:\r\n                    i = u.ops.pop(), u.trys.pop();\r\n                    continue;\r\n                default:\r\n                    if (!(o = u.trys, (o = o.length > 0 && o[o.length - 1]) || 6 !== i[0] && 2 !== i[0])) {\r\n                        u = 0;\r\n                        continue;\r\n                    }\r\n                    if (3 === i[0] && (!o || i[1] > o[0] && i[1] < o[3])) {\r\n                        u.label = i[1];\r\n                        break;\r\n                    }\r\n                    if (6 === i[0] && u.label < o[1]) {\r\n                        u.label = o[1], o = i;\r\n                        break;\r\n                    }\r\n                    if (o && u.label < o[2]) {\r\n                        u.label = o[2], u.ops.push(i);\r\n                        break;\r\n                    }\r\n                    o[2] && u.ops.pop(), u.trys.pop();\r\n                    continue;\r\n            }\r\n            i = e.call(t, u);\r\n        }\r\n        catch (t) {\r\n            i = [6, t], r = 0;\r\n        }\r\n        finally {\r\n            n = o = 0;\r\n        } if (5 & i[0])\r\n        throw i[1]; return { value: i[0] ? i[1] : void 0, done: !0 }; }([i, a]); }; } }; Object.defineProperty(n, \"__esModule\", { value: !0 }), n.QuestsClient = void 0; var u = function () { function t(t) { var e; this.options = t, this.obf = a.DefObf, t.authChainProvider ? this.fetchFn = s.authFetch(t.authChainProvider) : this.fetchFn = null !== (e = t.fetchFn) && void 0 !== e ? e : c.flatFetch; } return t.prototype.urlFor = function (t) { return \"\" + this.options.baseUrl + t; }, t.prototype.fetch = function (t, e) { return o(this, void 0, void 0, (function () { var n, u = this; return i(this, (function (a) { return (null == e ? void 0 : e.bodyObject) && (e.body = JSON.stringify(e.bodyObject), e.obf ? (e.body = this.obf.obf(e.body), e.headers = r(r({}, e.headers), { \"Content-Type\": \"application/quests\" })) : e.headers = r(r({}, e.headers), { \"Content-Type\": \"application/json\" })), n = r(r({}, e), { metadata: this.options.metadata, responseBodyType: \"text\" }), [2, this.fetchFn(this.urlFor(t), n).then((function (t) { return o(u, void 0, void 0, (function () { var n, r; return i(this, (function (o) { return n = t.text || \"\", (null == e ? void 0 : e.deobf) && t.ok && (n = this.obf.deobf(n)), r = function (t) { try {\r\n            return JSON.parse(t);\r\n        }\r\n        catch (e) {\r\n            return t;\r\n        } }(n), [2, { ok: t.ok, status: t.status, body: r }]; })); })); }))]; })); })); }, t.prototype.getQuests = function () { return o(this, void 0, void 0, (function () { return i(this, (function (t) { return [2, this.fetch(\"/quests\")]; })); })); }, t.prototype.getQuestDetails = function (t) { return o(this, void 0, void 0, (function () { return i(this, (function (e) { return [2, this.fetch(\"/quests/\" + t)]; })); })); }, t.prototype.startQuest = function (t) { return o(this, void 0, void 0, (function () { return i(this, (function (e) { return [2, this.fetch(\"/s/\" + this.obf.obf(t), { method: \"post\", deobf: !0 })]; })); })); }, t.prototype.makeProgress = function (t, e, n) { return o(this, void 0, void 0, (function () { return i(this, (function (r) { return [2, this.fetch(\"/p/\" + this.obf.obf(t) + \"/\" + this.obf.obf(e), { method: \"post\", deobf: !0, obf: !0, bodyObject: n })]; })); })); }, t; }(); n.QuestsClient = u; }));\r\n    return e(n((function (e, n) { var r = t && t.__createBinding || (Object.create ? function (t, e, n, r) { void 0 === r && (r = n), Object.defineProperty(t, r, { enumerable: !0, get: function () { return e[n]; } }); } : function (t, e, n, r) { void 0 === r && (r = n), t[r] = e[n]; }), o = t && t.__exportStar || function (t, e) { for (var n in t)\r\n        \"default\" === n || Object.prototype.hasOwnProperty.call(e, n) || r(e, t, n); }; Object.defineProperty(n, \"__esModule\", { value: !0 }), o(f, n), o(u, n); })));\r\n}));\r\ndefine(\"types\", [\"require\", \"exports\"], function (require, exports) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", { value: true });\r\n});\r\ndefine(\"component\", [\"require\", \"exports\"], function (require, exports) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", { value: true });\r\n    exports.QuestTrackingInfo = void 0;\r\n    // A randomly generated int32\r\n    var CLASS_ID = 1417815519;\r\n    /**\r\n     * Holds the information of a quest\r\n     * @public\r\n     */\r\n    var QuestTrackingInfo = /** @class */ (function () {\r\n        function QuestTrackingInfo(questData) {\r\n            this.questData = questData;\r\n        }\r\n        QuestTrackingInfo.prototype.toJSON = function () {\r\n            return this.questData;\r\n        };\r\n        QuestTrackingInfo = __decorate([\r\n            Component(\"engine.questTrackingComponent\", CLASS_ID)\r\n        ], QuestTrackingInfo);\r\n        return QuestTrackingInfo;\r\n    }());\r\n    exports.QuestTrackingInfo = QuestTrackingInfo;\r\n});\r\ndefine(\"mappings\", [\"require\", \"exports\"], function (require, exports) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", { value: true });\r\n    exports.toRendererQuest = void 0;\r\n    function toRendererQuest(serverDetails) {\r\n        return {\r\n            id: serverDetails.id,\r\n            name: serverDetails.name,\r\n            description: serverDetails.description,\r\n            icon: serverDetails.icon,\r\n            thumbnail_banner: serverDetails.thumbnailBanner,\r\n            thumbnail_entry: serverDetails.thumbnailEntry,\r\n            status: serverDetails.progressStatus,\r\n            sections: toRendererSections(serverDetails.tasks),\r\n        };\r\n    }\r\n    exports.toRendererQuest = toRendererQuest;\r\n    function toRendererSections(tasks) {\r\n        var sectionsMap = tasks.reduce(function (currentMap, task) {\r\n            var _a, _b;\r\n            var sectionName = (_a = task.section) !== null && _a !== void 0 ? _a : \"\";\r\n            var section = (_b = currentMap[sectionName]) !== null && _b !== void 0 ? _b : {\r\n                id: sectionName,\r\n                name: sectionName,\r\n                progress: 0,\r\n                tasks: [],\r\n            };\r\n            section.tasks.push(toRendererTask(task));\r\n            currentMap[sectionName] = section;\r\n            return currentMap;\r\n        }, {});\r\n        var sections = [];\r\n        for (var sectionName in sectionsMap) {\r\n            var section = sectionsMap[sectionName];\r\n            section.progress =\r\n                section.tasks.length > 0\r\n                    ? section.tasks.reduce(function (a, b) { return a + b.progress; }, 0) /\r\n                        section.tasks.length\r\n                    : 0;\r\n            sections.push(section);\r\n        }\r\n        return sections;\r\n    }\r\n    function toRendererTask(task) {\r\n        return {\r\n            id: task.id,\r\n            progress: task.progressPercentage,\r\n            name: task.description,\r\n            coordinates: task.coordinates,\r\n            payload: JSON.stringify(getProgressPayload(task)),\r\n            status: task.progressStatus,\r\n            type: task.progressMode.type,\r\n        };\r\n    }\r\n    function getProgressPayload(task) {\r\n        var _a, _b;\r\n        var progressMode = task.progressMode;\r\n        switch (progressMode.type) {\r\n            case \"single\":\r\n                return { isDone: task.progressStatus === \"completed\" };\r\n            case \"numeric\":\r\n                return {\r\n                    type: \"numeric\",\r\n                    start: progressMode.start,\r\n                    end: progressMode.end,\r\n                    current: (_b = (_a = task.progressSummary) === null || _a === void 0 ? void 0 : _a.current) !== null && _b !== void 0 ? _b : progressMode.start,\r\n                };\r\n            case \"step-based\":\r\n                // TODO\r\n                return {};\r\n        }\r\n    }\r\n});\r\ndefine(\"RemoteQuestTracker\", [\"require\", \"exports\", \"dcl-quests-client/quests-client-amd\", \"@decentraland/SignedFetch\", \"component\", \"mappings\"], function (require, exports, quests_client_amd_1, SignedFetch_1, component_1, mappings_1) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", { value: true });\r\n    exports.RemoteQuestTracker = void 0;\r\n    var defaultOptions = {\r\n        clientFactory: function () {\r\n            return new quests_client_amd_1.QuestsClient({\r\n                baseUrl: \"https://quests-api.decentraland.io\",\r\n                fetchFn: SignedFetch_1.signedFetch,\r\n            });\r\n        },\r\n        logErrors: true,\r\n        addToEngine: true,\r\n    };\r\n    var RemoteQuestTracker = /** @class */ (function () {\r\n        function RemoteQuestTracker(questId, options) {\r\n            this.questId = questId;\r\n            this.options = __assign(__assign({}, defaultOptions), (options !== null && options !== void 0 ? options : {}));\r\n            this.client = this.options.clientFactory();\r\n            this.entity = new Entity();\r\n            if (this.options.addToEngine) {\r\n                engine.addEntity(this.entity);\r\n            }\r\n            this.refresh();\r\n        }\r\n        RemoteQuestTracker.prototype.refresh = function () {\r\n            return __awaiter(this, void 0, void 0, function () {\r\n                var _a;\r\n                var _this = this;\r\n                return __generator(this, function (_b) {\r\n                    switch (_b.label) {\r\n                        case 0:\r\n                            _a = this.updateQuest;\r\n                            return [4 /*yield*/, this.makeRequest(function () { return _this.client.getQuestDetails(_this.questId); })];\r\n                        case 1: return [2 /*return*/, _a.apply(this, [_b.sent()])];\r\n                    }\r\n                });\r\n            });\r\n        };\r\n        RemoteQuestTracker.prototype.startQuest = function () {\r\n            return __awaiter(this, void 0, void 0, function () {\r\n                var _a;\r\n                var _this = this;\r\n                return __generator(this, function (_b) {\r\n                    switch (_b.label) {\r\n                        case 0:\r\n                            _a = this.updateQuest;\r\n                            return [4 /*yield*/, this.makeRequest(function () { return _this.client.startQuest(_this.questId); })];\r\n                        case 1: return [2 /*return*/, _a.apply(this, [_b.sent()])];\r\n                    }\r\n                });\r\n            });\r\n        };\r\n        RemoteQuestTracker.prototype.makeProgress = function (taskId, progressData) {\r\n            return __awaiter(this, void 0, void 0, function () {\r\n                var _a;\r\n                var _this = this;\r\n                return __generator(this, function (_b) {\r\n                    switch (_b.label) {\r\n                        case 0:\r\n                            _a = this.updateQuest;\r\n                            return [4 /*yield*/, this.makeRequest(function () {\r\n                                    return _this.client.makeProgress(_this.questId, taskId, progressData);\r\n                                })];\r\n                        case 1: return [2 /*return*/, _a.apply(this, [_b.sent()])];\r\n                    }\r\n                });\r\n            });\r\n        };\r\n        RemoteQuestTracker.prototype.makeRequest = function (request) {\r\n            return __awaiter(this, void 0, void 0, function () {\r\n                var response;\r\n                return __generator(this, function (_a) {\r\n                    switch (_a.label) {\r\n                        case 0: return [4 /*yield*/, request()];\r\n                        case 1:\r\n                            response = _a.sent();\r\n                            if (!response.ok) {\r\n                                if (this.options.logErrors) {\r\n                                    log(\"Error performing request on quest with id: \" + this.questId + \". Status: \" + response.status, { body: response.body });\r\n                                }\r\n                            }\r\n                            return [2 /*return*/, response];\r\n                    }\r\n                });\r\n            });\r\n        };\r\n        RemoteQuestTracker.prototype.updateQuest = function (response) {\r\n            if (response.ok) {\r\n                this.entity.addComponentOrReplace(new component_1.QuestTrackingInfo(mappings_1.toRendererQuest(response.body)));\r\n            }\r\n            return response;\r\n        };\r\n        return RemoteQuestTracker;\r\n    }());\r\n    exports.RemoteQuestTracker = RemoteQuestTracker;\r\n});\r\ndefine(\"dcl-ecs-quests\", [\"require\", \"exports\", \"component\", \"mappings\", \"types\", \"RemoteQuestTracker\"], function (require, exports, component_2, mappings_2, types_1, RemoteQuestTracker_1) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", { value: true });\r\n    __exportStar(component_2, exports);\r\n    __exportStar(mappings_2, exports);\r\n    __exportStar(types_1, exports);\r\n    __exportStar(RemoteQuestTracker_1, exports);\r\n});\r\n//# sourceMappingURL=data:application/json;base64,",
    "sha256": "b5a4a7930b50943d8a0adfc667035cf5fee531724f9c14f2b073f39d921760e0"
  }
]